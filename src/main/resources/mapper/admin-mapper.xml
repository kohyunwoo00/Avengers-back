<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.avengers.admin.model.dao.AdminMapper">
  <select id="findAllMembers" parameterType="map" resultType="AdminMemberDTO">
    SELECT 
            MEMBER_NO memberNo
          , MEMBER_ID memberId
          , MEMBER_NAME memberName
          , EMAIL email
          , MEMBER_ROLE memberRole
          , IS_ACTIVE isActive
          , ENROLL_DATE enrollDate
          , MODIFIED_DATE modifiedDate
      FROM 
            TB_MEMBER
    <where>
      <if test="status != null and status != ''">
        AND 
            IS_ACTIVE = #{status}
      </if>
      <if test="role != null and role != ''">
        AND 
            MEMBER_ROLE = #{role}
      </if>
   </where>
    ORDER 
       BY 
          ENROLL_DATE DESC
</select>


  <select id="countAllMember" resultType="Long">
      SELECT 
             COUNT(*) 
        FROM 
             TB_MEMBER
  </select>

  <select id="countReportMembers" resultType="long">
      SELECT 
             COUNT(*) 
        FROM 
             TB_REVIEW_REPORT
  </select>

 <select id="getMemberById" resultType="AdminMemberDTO">
  SELECT 
          MEMBER_NO memberNo
        , MEMBER_ID memberId        
        , MEMBER_NAME memberName
        , MEMBER_ROLE memberRole  
        , EMAIL email 
        , IS_ACTIVE isActive  
    FROM
          TB_MEMBER
    WHERE
          MEMBER_NO =  #{memberNo}
 </select>
  <update id="updateMemberStatus" parameterType="AdminMemberDTO">
    UPDATE 
            TB_MEMBER
       SET 
            IS_ACTIVE = #{status}
     WHERE 
            MEMBER_NO = #{memberNo}
  </update>
 	<!--역할 업데이트-->
    <update id="updateMemberRole" parameterType="AdminMemberDTO">
        UPDATE 
                TB_MEMBER
           SET 
                MEMBER_ROLE = #{role} 
         WHERE 
                MEMBER_NO = #{memberNo}
    </update>
    <select id="selectReportMembers" resultType="AdminReviewReportDTO">
  SELECT
          RR.REVIEW_REPORT_NO reportNo,
           R.REVIEW_NO reviewNo,         
           R.TRAVEL_NO travelNo,
          R.REVIEW_CONTENT    reviewContent,
          WRITER.MEMBER_NAME  memberName,
          RR.REPORT_CONTENT   reportReason,
          RR.CREATE_DATE      createDate,
          CASE 
              WHEN RR.STATUS = 'N' AND (SYSDATE - RR.CREATE_DATE) &gt; 3 THEN '반려'
              WHEN RR.STATUS = 'N' THEN '대기중'
              ELSE '처리완료'
          END status
    FROM 
          TB_REVIEW_REPORT RR
    JOIN 
          TB_TRAVEL_REVIEW R 
      ON 
          RR.REVIEW_NO = R.REVIEW_NO
    JOIN 
          TB_MEMBER WRITER 
      ON 
          R.MEMBER_NO = WRITER.MEMBER_NO
    ORDER 
       BY 
          RR.CREATE_DATE DESC
  </select>

  <update id="updateStatusReport" parameterType="long">
    UPDATE 
           TB_REVIEW_REPORT
       SET 
           STATUS = 'Y'
     WHERE 
           REVIEW_REPORT_NO = #{reviewReportNo}
  </update>

  


</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.avengers.member.model.dao.MemberMapper">

    <select id="getMemberByMemberId"  parameterType="String"  resultType="long">
      select 
             COUNT(*)
        FROM
             TB_MEMBER
       WHERE
             MEMBER_ID = #{memberId}
    </select>

    <select id="getMemberByEmail" parameterType="String" resultType="MemberDTO">
      SELECT
              MEMBER_NO memberNo
            , MEMBER_ID memberId        
            , MEMBER_PW memberPw
            , MEMBER_NAME memberName
            , MEMBER_ROLE memberRole  
            , EMAIL email 
            , IS_ACTIVE isActive           
        FROM
             TB_MEMBER
       WHERE
             EMAIL = #{email}
    
    </select>
    <!-- 회원 가입 -->
    <insert id="signUp" parameterType="com.kh.avengers.member.model.vo.Member">
      INSERT
        INTO
             TB_MEMBER
           (
             MEMBER_ID 
           , MEMBER_PW 
           , MEMBER_NAME 
           , EMAIL 
           , MEMBER_ROLE 
           )
      VALUES
           (
             #{memberId}
           , #{memberPw} 
           , #{memberName}         
           , #{email}
           , #{memberRole}
           )
    </insert>

    <select id="findMemberByNameAndEmail" parameterType="FindIdRequestDTO" resultType="FindIdRequestDTO">
      SELECT
            
            MEMBER_NAME memberName
          , EMAIL email
          , IS_ACTIVE isActive
        FROM
            TB_MEMBER
      WHERE
            MEMBER_NAME = #{memberName}
        AND 
            EMAIL = #{email}
        AND 
            IS_ACTIVE = 'Y'
</select>


<select id="getMemberByIdAndEmail" parameterType="map" resultType="MemberDTO">
    SELECT 
           MEMBER_ID memberId
         , EMAIL email
      FROM 
           TB_MEMBER
     WHERE 
           MEMBER_ID = #{memberId}
      AND 
           EMAIL = #{email}
      AND 
           IS_ACTIVE = 'Y'
</select>
  
  <!-- 비밀번호 중복 체크 -->
 <select id="getMemberByPassword" parameterType="map" resultType="int">
      SELECT 
            COUNT(*) 
      FROM 
            TB_MEMBER 
      WHERE 
            MEMBER_NO = #{memberNo}
        AND 
            MEMBER_PW = #{newPassword}
 </select>

 <update id="updateMemberPassword" parameterType="map">
    UPDATE 
        TB_MEMBER
      SET 
          MEMBER_PW = #{newPw}
      WHERE 
          MEMBER_ID = #{memberId}
 
 </update>

  <!-- 닉네임 중복 체크 -->
  <select id="getMemberByMemberName" parameterType="String" resultType="ChangeMemberNameDTO">
    SELECT 
           MEMBER_NO memberNo
         , MEMBER_NAME newMemberName 
      FROM 
           TB_MEMBER
     WHERE 
           MEMBER_NAME = #{newMemberName}
  </select>

  <!-- 닉네임 변경 -->
  <update id="updateMemberName" parameterType="ChangeMemberNameDTO">
    UPDATE 
            TB_MEMBER
       SET 
            MEMBER_NAME = #{newMemberName}
     WHERE 
            MEMBER_NO = #{memberNo}
  
  </update>

  <select id="findByMemberId" parameterType="string" resultType="MemberDTO">
  SELECT 
          MEMBER_NO  memberNo
        , MEMBER_ID  memberId
        , MEMBER_PW  memberPw
        , MEMBER_NAME  memberName
        , EMAIL  email
        , MEMBER_ROLE  memberRole
        , IS_ACTIVE  isActive
    FROM 
          TB_MEMBER
   WHERE 
          MEMBER_ID = #{memberId}
</select>

  <select id="findByMemberNo" parameterType="long" resultType="MemberDTO">
    SELECT 
           MEMBER_NO memberNo
         , MEMBER_ID memberId        
         , MEMBER_PW memberPw
         , MEMBER_NAME memberName
         , MEMBER_ROLE memberRole  
         , EMAIL email 
         , IS_ACTIVE isActive  
      FROM 
           TB_MEMBER
     WHERE 
           MEMBER_NO = #{memberNo}
  </select>

  <update id="deleteMember" parameterType="long">
    UPDATE 
           TB_MEMBER
       SET 
           IS_ACTIVE = 'N'
     WHERE 
           MEMBER_NO = #{memberNo}
  </update>


 
  </mapper>
    
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.avengers.reviews.model.dao.ReviewMapper">
   <!-- 좋아요 확인 여부-->
      <select id="checkedLike" parameterType="map" resultType="long">
        SELECT
              COUNT(*)
          FROM
              TB_REVIEW_LIKE
        WHERE
              REVIEW_NO = #{reviewNo} 
          AND
              MEMBER_NO = #{memberNo}
      </select>

      <!--좋아요 올리기-->
      <insert id="insertLikeCount" parameterType="map">
        INSERT 
          INTO 
               TB_REVIEW_LIKE 
             (
               REVIEW_NO
             , MEMBER_NO
             )
        VALUES 
             (
               #{reviewNo}
             , #{memberNo}
        )
      </insert>


      <!-- 좋아요 취소-->
      <delete id="deleteLikeCount" parameterType="map">
        DELETE
          FROM
               TB_REVIEW_LIKE
         WHERE
               REVIEW_NO = #{reviewNo}
           AND
               MEMBER_NO = #{memberNo}
      </delete>

    <!-- 리뷰 등록 -->
    <insert id="insertReview" parameterType="com.kh.avengers.reviews.model.dto.ReviewDTO">
        <!-- 시퀀스로 리뷰 번호 생성 -->
        <selectKey keyProperty="reviewNo" resultType="long" order="BEFORE">
            SELECT SEQ_REVIEW.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO
            TB_TRAVEL_REVIEW
            (
                REVIEW_NO,
                TRAVEL_NO,
                MEMBER_NO,
                REVIEW_TITLE,
                REVIEW_CONTENT,
                RATING,
                CREATED_DATE,
                MODIFIED_DATE
            )
            VALUES
            (
                #{reviewNo},
                #{travelNo},
                #{memberNo},
                #{reviewTitle},
                #{reviewContent},
                #{rating},
                SYSDATE,
                SYSDATE
            )
    </insert>

    <!-- 리뷰 이미지 등록 -->
    <insert id="insertReviewImage" parameterType="com.kh.avengers.reviews.model.dto.ReviewImageDTO">
        INSERT INTO
            TB_REVIEW_IMAGE
            (
                IMAGE_NO,
                REVIEW_NO,
                IMAGE_URL,
                CREATED_DATE
            )
            VALUES
            (
                SEQ_REVIEW_IMAGE.NEXTVAL,
                #{reviewNo},
                #{imageUrl},
                SYSDATE
            )
    </insert>

    <!-- 여행지별 리뷰목록 조회 -->
    <select id="selectTravelReviews" resultType="com.kh.avengers.reviews.model.dto.ReviewDTO">
        SELECT *
        FROM (
            SELECT ROWNUM AS rnum, v.*
            FROM (
                SELECT
                    r.REVIEW_NO        AS reviewNo,
                    r.TRAVEL_NO        AS travelNo,
                    r.MEMBER_NO        AS memberNo,
                    r.REVIEW_TITLE     AS reviewTitle,
                    r.REVIEW_CONTENT   AS reviewContent,
                    r.RATING           AS rating,
                    r.CREATED_DATE     AS createdDate,
                    r.MODIFIED_DATE    AS modifiedDate,
                    m.MEMBER_NAME      AS memberName
                FROM TB_TRAVEL_REVIEW r
                LEFT JOIN TB_MEMBER m
                    ON r.MEMBER_NO = m.MEMBER_NO
                WHERE r.TRAVEL_NO = #{travelNo}
                ORDER BY r.CREATED_DATE DESC
            ) v
            WHERE ROWNUM &lt;= #{offset} + #{limit}
        )
        WHERE rnum &gt; #{offset}
    </select>

    <!-- 리뷰의 이미지 목록 조회 >> 특정 리뷰의 모든 이미지 조회-->
    <select id="selectReviewImages" parameterType="long" resultType="com.kh.avengers.reviews.model.dto.ReviewImageDTO">
        SELECT
            IMAGE_NO as imageNo,
            REVIEW_NO as reviewNo,
            IMAGE_URL as imageUrl,
            CREATED_DATE as createdDate
        FROM
            TB_REVIEW_IMAGE
        WHERE
            REVIEW_NO = #{reviewNo}
        ORDER BY
            CREATED_DATE ASC
    </select>

    <!-- 특정 여행지의 총 리뷰 개수 -->
    <select id="countTravelReviews" parameterType="long" resultType="long">
        SELECT
            COUNT(*)
        FROM
            TB_TRAVEL_REVIEW
        WHERE
            TRAVEL_NO = #{travelNo}
    </select>

    <!-- 특정 여행지의 평균 별점 조회 -->
    <select id="selectAverageRating" parameterType="long" resultType="double">
        SELECT
            NVL(AVG(RATING), 0)
        FROM
            TB_TRAVEL_REVIEW
        WHERE
            TRAVEL_NO = #{travelNo}
    </select>

    <!--특정 회원의 모든 리뷰 목록 조회-->
    <select id="selectMemberReviews" parameterType="long" resultType="com.kh.avengers.reviews.model.dto.ReviewDTO">
        SELECT
            r.REVIEW_NO as reviewNo,
            r.TRAVEL_NO as travelNo,
            r.MEMBER_NO as memberNo,
            r.REVIEW_TITLE as reviewTitle,
            r.REVIEW_CONTENT as reviewContent,
            r.RATING as rating,
            r.CREATED_DATE as createdDate,
            r.MODIFIED_DATE as modifiedDate,
            t.TRAVEL_TITLE as travelName
        FROM
            TB_TRAVEL_REVIEW r
        LEFT JOIN TB_TRAVEL t
            ON r.TRAVEL_NO = t.TRAVEL_NO
        WHERE
            r.MEMBER_NO = #{memberNo}
        ORDER BY
            r.CREATED_DATE DESC
    </select>


</mapper>